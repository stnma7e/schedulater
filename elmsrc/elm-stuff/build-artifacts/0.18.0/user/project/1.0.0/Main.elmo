var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$CalendarData = function (a) {
	return {schedIndex: a};
};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {courses: a, subjects: b, coursesStr: c};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A3(
		_user$project$Main$Model,
		A3(
			_user$project$Types$CourseData,
			0,
			{ctor: '[]'},
			{ctor: '[]'}),
		{ctor: '[]'},
		''),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$NewScheds = function (a) {
	return {ctor: 'NewScheds', _0: a};
};
var _user$project$Main$getScheds = A2(
	_elm_lang$http$Http$send,
	_user$project$Main$NewScheds,
	A3(
		_elm_lang$http$Http$post,
		'/courses',
		A2(_elm_lang$http$Http$stringBody, 'application/json', _user$project$Types$body),
		_user$project$Types$decodeCourseData));
var _user$project$Main$NewSubjects = function (a) {
	return {ctor: 'NewSubjects', _0: a};
};
var _user$project$Main$getSubs = A2(
	_elm_lang$http$Http$send,
	_user$project$Main$NewSubjects,
	A2(
		_elm_lang$http$Http$get,
		'/subjects',
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'GetSubjects':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Main$getSubs};
			case 'GetScheds':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Main$getScheds};
			case 'NewSubjects':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{subjects: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								subjects: {
									ctor: '::',
									_0: _elm_lang$core$Basics$toString(_p0._0._0),
									_1: {ctor: '[]'}
								}
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			default:
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{courses: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								coursesStr: _elm_lang$core$Basics$toString(_p0._0._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
		}
	});
var _user$project$Main$GetScheds = {ctor: 'GetScheds'};
var _user$project$Main$GetSubjects = {ctor: 'GetSubjects'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$GetSubjects),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('GetSubs'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$GetScheds),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('GetScheds'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Basics$toString(model.courses.schedCount)),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
